{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "direct_csv_file",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "direct_csv_adls_sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Region as string,",
				"          Country as string,",
				"          ItemType as string,",
				"          SalesChannel as string,",
				"          OrderPriority as string,",
				"          OrderID as integer,",
				"          UnitsSold as short,",
				"          UnitPrice as double,",
				"          UnitCost as double,",
				"          TotalRevenue as double,",
				"          TotalCost as double,",
				"          TotalProfit as double,",
				"          ShippingCost as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Region as string,",
				"          Country as string,",
				"          ItemType as string,",
				"          SalesChannel as string,",
				"          OrderPriority as string,",
				"          OrderID as string,",
				"          UnitsSold as string,",
				"          UnitPrice as string,",
				"          UnitCost as string,",
				"          TotalRevenue as string,",
				"          TotalCost as string,",
				"          TotalProfit as string",
				"     ),",
				"     partitionFileNames:['regionalData.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}